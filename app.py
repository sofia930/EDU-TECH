from flask import Flask, render_template, request, redirect, session, url_for
import sqlite3
import os
import pandas as pd

app = Flask(__name__)
app.secret_key = "supersecreto"

# Rutas de archivos
BASE_DIR = os.path.abspath(os.path.dirname(__file__))
DB_PATH = os.path.join(BASE_DIR, 'database.db')
DATASET_PATH = os.path.join(BASE_DIR, 'datos.csv')

# 游늷 Clase para gestionar la base de datos
class DatabaseManager:
    def __init__(self):
        self.db_path = DB_PATH
        self.verificar_base_datos()

    def conectar(self):
        return sqlite3.connect(self.db_path)

    def verificar_base_datos(self):
        conn = self.conectar()
        cursor = conn.cursor()
        
        cursor.execute("""
        CREATE TABLE IF NOT EXISTS usuarios (
            id_usuario INTEGER PRIMARY KEY AUTOINCREMENT,
            email TEXT UNIQUE NOT NULL,
            contrase침a TEXT NOT NULL,
            nombre TEXT NOT NULL,
            apellido TEXT NOT NULL,
            matematicas INTEGER,
            historia INTEGER,
            fisica INTEGER,
            quimica INTEGER,
            biologia INTEGER,
            ingles INTEGER,
            geografia INTEGER
        )
        """)

        cursor.execute("""
        CREATE TABLE IF NOT EXISTS respuestas (
            id_usuario INTEGER,
            pregunta TEXT NOT NULL,
            respuesta TEXT,
            PRIMARY KEY (id_usuario, pregunta),
            FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
        )
        """)

        conn.commit()
        conn.close()

db_manager = DatabaseManager()  # Instancia de la base de datos

# 游늷 Clase Usuario
class Usuario:
    def __init__(self, email, contrase침a, nombre, apellido, calificaciones):
        self.email = email.strip().lower()
        self.contrase침a = contrase침a.strip()
        self.nombre = nombre.strip().title()
        self.apellido = apellido.strip().title()
        self.calificaciones = calificaciones

    def registrar(self):
        conn = db_manager.conectar()
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM usuarios WHERE email = ?", (self.email,))
        if cursor.fetchone():
            conn.close()
            return False  # Usuario ya existe

        cursor.execute("""
        INSERT INTO usuarios (email, contrase침a, nombre, apellido, matematicas, historia, fisica, quimica, biologia, ingles, geografia) 
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        """, (self.email, self.contrase침a, self.nombre, self.apellido, *self.calificaciones))

        conn.commit()
        conn.close()
        return True

    @staticmethod
    def autenticar(email, contrase침a):
        conn = db_manager.conectar()
        cursor = conn.cursor()
        cursor.execute("SELECT id_usuario, nombre, apellido FROM usuarios WHERE email = ? AND contrase침a = ?", (email.strip().lower(), contrase침a))
        usuario = cursor.fetchone()
        conn.close()
        return usuario

# 游늷 Clase para manejar la encuesta
class Encuesta:
    preguntas = [
            {"texto": "1. Tengo fama de decir lo que pienso claramente y sin rodeos.", "estilo": "Pragm치tico"},
            {"texto": "2. Estoy seguro/a de lo que es bueno y malo, lo que est치 bien y lo que est치 mal.", "estilo": "Te칩rico"},
            {"texto": "3. Muchas veces act칰o sin mirar las consecuencias.", "estilo": "Activo"},
            {"texto": "4. Normalmente trato de resolver los problemas met칩dicamente y paso a paso.", "estilo": "Te칩rico"},
            {"texto": "5. Creo que los formalismos coartan y limitan la actuaci칩n libre de las personas.", "estilo": "Activo"},
            {"texto": "6. Me interesa saber cu치les son los sistemas de valores de los dem치s y con qu칠 criterios act칰an.", "estilo": "Te칩rico"},
            {"texto": "7. Pienso que el actuar intuitivamente puede ser siempre tan v치lido como actuar reflexivamente.", "estilo": "Activo"},
            {"texto": "8. Creo que lo m치s importante es que las cosas funcionen.", "estilo": "Pragm치tico"},
            {"texto": "9. Procuro estar al tanto de lo que ocurre aqu칤 y ahora.", "estilo": "Activo"},
            {"texto": "10. Disfruto cuando tengo tiempo para preparar mi trabajo y realizarlo a conciencia.", "estilo": "Reflexivo"},
            {"texto": "11. Estoy a gusto siguiendo un orden en las comidas, en el estudio, haciendo ejercicio regularmente.", "estilo": "Te칩rico"},
            {"texto": "12. Cuando escucho una nueva idea, enseguida comienzo a pensar c칩mo ponerla en pr치ctica.", "estilo": "Pragm치tico"},
            {"texto": "13. Prefiero las ideas originales y novedosas aunque no sean pr치cticas.", "estilo": "Activo"},
            {"texto": "14. Admito y me ajusto a las normas s칩lo si me sirven para lograr mis objetivos.", "estilo": "Pragm치tico"},
            {"texto": "15. Normalmente encajo bien con personas reflexivas, y me cuesta sintonizar con personas demasiado espont치neas e imprevisibles.", "estilo": "Te칩rico"},
            {"texto": "16. Escucho con m치s frecuencia que hablo.", "estilo": "Reflexivo"},
            {"texto": "17. Prefiero las cosas estructuradas a las desordenadas.", "estilo": "Te칩rico"},
            {"texto": "18. Cuando poseo cualquier informaci칩n, trato de interpretarla bien antes de manifestar alguna conclusi칩n.", "estilo": "Reflexivo"},
            {"texto": "19. Antes de hacer algo, estudio con cuidado sus ventajas e inconvenientes.", "estilo": "Reflexivo"},
            {"texto": "20. Me entusiasmo con el reto de hacer algo nuevo y diferente.", "estilo": "Activo"},
            {"texto": "21. Casi siempre procuro ser coherente con mis criterios y sistemas de valores. Tengo principios y los sigo.", "estilo": "Te칩rico"},
            {"texto": "22. Cuando hay una discusi칩n, no me gusta ir con rodeos.", "estilo": "Pragm치tico"},
            {"texto": "23. Me disgusta implicarme afectivamente en mi ambiente de trabajo. Prefiero mantener relaciones distantes.", "estilo": "Te칩rico"},
            {"texto": "24. Me gustan m치s las personas realistas y concretas que las te칩ricas.", "estilo": "Pragm치tico"},
            {"texto": "25. Me cuesta ser creativo/a, romper estructuras.", "estilo": "Te칩rico"},
            {"texto": "26. Me siento a gusto con personas espont치neas y divertidas.", "estilo": "Activo"},
            {"texto": "27. La mayor칤a de las veces expreso abiertamente c칩mo me siento.", "estilo": "Activo"},
            {"texto": "28. Me gusta analizar y dar vueltas a las cosas.", "estilo": "Reflexivo"},
            {"texto": "29. Me molesta que la gente no se tome en serio las cosas.", "estilo": "Te칩rico"},
            {"texto": "30. Me atrae experimentar y practicar las 칰ltimas t칠cnicas y novedades.", "estilo": "Pragm치tico"},
            {"texto": "31. Soy cauteloso/a a la hora de sacar conclusiones.", "estilo": "Reflexivo"},
            {"texto": "32. Prefiero contar con el mayor n칰mero de fuentes de informaci칩n. Cuantos m치s datos re칰na para reflexionar, mejor.", "estilo": "Reflexivo"},
            {"texto": "33. Tiendo a ser perfeccionista.", "estilo": "Te칩rico"},
            {"texto": "34. Prefiero o칤r las opiniones de los dem치s antes de exponer la m칤a.", "estilo": "Reflexivo"},
            {"texto": "35. Me gusta afrontar la vida espont치neamente y no tener que planificar todo previamente.", "estilo": "Activo"},
            {"texto": "36. En las discusiones, me gusta observar c칩mo act칰an los dem치s participantes.", "estilo": "Reflexivo"},
            {"texto": "37. Me siento inc칩modo/a con las personas calladas y demasiado anal칤ticas.", "estilo": "Activo"},
            {"texto": "38. Juzgo con frecuencia las ideas de los dem치s por su valor pr치ctico.", "estilo": "Pragm치tico"},
            {"texto": "39. Me agobio si me obligan a acelerar mucho el trabajo para cumplir un plazo.", "estilo": "Reflexivo"},
            {"texto": "40. En las reuniones apoyo las ideas pr치cticas y realistas.", "estilo": "Pragm치tico"},
            {"texto": "41. Es mejor gozar del momento presente que deleitarse pensando en el pasado o en el futuro.", "estilo": "Activo"},
            {"texto": "42. Me molestan las personas que siempre desean apresurar las cosas.", "estilo": "Reflexivo"},
            {"texto": "43. Aporto ideas nuevas y espont치neas en los grupos de discusi칩n.", "estilo": "Activo"},
            {"texto": "44. Pienso que son m치s consistentes las decisiones fundamentadas en un minucioso an치lisis que las basadas en la intuici칩n.", "estilo": "Reflexivo"},
            {"texto": "45. Detecto frecuentemente la inconsistencia y puntos d칠biles en las argumentaciones de los dem치s.", "estilo": "Te칩rico"},
            {"texto": "46. Creo que es preciso saltarse las normas muchas m치s veces que cumplirlas.", "estilo": "Activo"},
            {"texto": "47. A menudo caigo en la cuenta de otras formas mejores y m치s pr치cticas de hacer las cosas.", "estilo": "Pragm치tico"},
            {"texto": "48. En conjunto hablo m치s que escucho.", "estilo": "Activo"},
            {"texto": "49. Prefiero distanciarme de los hechos y observarlos desde otras perspectivas.", "estilo": "Reflexivo"},
            {"texto": "50. Estoy convencido/a que debe imponerse la l칩gica y el razonamiento.", "estilo": "Te칩rico"},
            {"texto": "51. Me gusta buscar nuevas experiencias.", "estilo": "Activo"},
            {"texto": "52. Me gusta experimentar y aplicar las cosas.", "estilo": "Pragm치tico"},
            {"texto": "53. Pienso que debemos llegar pronto al grano, al meollo de los temas.", "estilo": "Pragm치tico"},
            {"texto": "54. Siempre trato de conseguir conclusiones e ideas claras.", "estilo": "Te칩rico"},
            {"texto": "55. Prefiero discutir cuestiones concretas y no perder el tiempo con pl치ticas superficiales.", "estilo": "Reflexivo"},
            {"texto": "56. Me impaciento cuando me dan explicaciones irrelevantes e incoherentes.", "estilo": "Pragm치tico"},
            {"texto": "57. Compruebo antes si las cosas funcionan realmente.", "estilo": "Pragm치tico"},
            {"texto": "58. Hago varios borradores antes de la redacci칩n definitiva de un trabajo.", "estilo": "Reflexivo"},
            {"texto": "59. Soy consciente de que en las discusiones ayudo a mantener a los dem치s centrados en el tema, evitando divagaciones.", "estilo": "Pragm치tico"},
            {"texto": "60. Observo que, con frecuencia, soy uno/a de los/as m치s objetivos/as y desapasionados/as en las discusiones.", "estilo": "Te칩rico"},
            {"texto": "61. Cuando algo va mal, le quito importancia y trato de hacerlo mejor.", "estilo": "Activo"},
            {"texto": "62. Rechazo ideas originales y espont치neas si no las veo pr치cticas.", "estilo": "Pragm치tico"},
            {"texto": "63. Me gusta sopesar diversas alternativas antes de tomar una decisi칩n.", "estilo": "Reflexivo"},
            {"texto": "64. Con frecuencia miro hacia delante para prever el futuro.", "estilo": "Te칩rico"},
            {"texto": "65. En los debates y discusiones prefiero desempe침ar un papel secundario antes que ser el/la l칤der o el/la que m치s participa.", "estilo": "Reflexivo"},
            {"texto": "66. Me molestan las personas que no act칰an con l칩gica.", "estilo": "Te칩rico"},
            {"texto": "67. Me resulta inc칩modo tener que planificar y prever las cosas.", "estilo": "Activo"},
            {"texto": "68. Creo que el fin justifica los medios en muchos casos.", "estilo": "Pragm치tico"},
            {"texto": "69. Suelo reflexionar sobre los asuntos y problemas.", "estilo": "Reflexivo"},
            {"texto": "70. El trabajar a conciencia me llena de satisfacci칩n y orgullo.", "estilo": "Reflexivo"},
            {"texto": "71. Ante los acontecimientos trato de descubrir los principios y teor칤as en que se basan.", "estilo": "Te칩rico"},
            {"texto": "72. Con tal de conseguir el objetivo que pretendo soy capaz de herir sentimientos ajenos.", "estilo": "Pragm치tico"},
            {"texto": "73. No me importa hacer todo lo necesario para que sea efectivo mi trabajo.", "estilo": "Pragm치tico"},
            {"texto": "74. Con frecuencia soy una de las personas que m치s anima las fiestas.", "estilo": "Activo"},
            {"texto": "75. Me aburro enseguida con el trabajo met칩dico y minucioso.", "estilo": "Activo"},
            {"texto": "76. La gente con frecuencia cree que soy poco sensible a sus sentimientos.", "estilo": "Pragm치tico"},
            {"texto": "77. Suelo dejarme llevar por mis intuiciones.", "estilo": "Activo"},
            {"texto": "78. Si trabajo en grupo procuro que se siga un m칠todo y un orden.", "estilo": "Te칩rico"},
            {"texto": "79. Con frecuencia me interesa averiguar lo que piensa la gente.", "estilo": "Reflexivo"},
            {"texto": "80. Esquivo los temas subjetivos, ambiguos y poco claros.", "estilo": "Pragm치tico"},
            ]

    @staticmethod
    def guardar_respuestas(usuario_id, respuestas):
        conn = db_manager.conectar()
        cursor = conn.cursor()
        for i, pregunta in enumerate(Encuesta.preguntas):
            respuesta = respuestas.get(f'pregunta{i}')
            if respuesta:
                cursor.execute("""
                    INSERT INTO respuestas (id_usuario, pregunta, respuesta)
                    VALUES (?, ?, ?)
                    ON CONFLICT(id_usuario, pregunta) 
                    DO UPDATE SET respuesta = excluded.respuesta
                """, (usuario_id, pregunta["texto"], respuesta))

        conn.commit()
        conn.close()

# 游늷 Clase para manejar sesi칩n
class SessionService:
    @staticmethod
    def logout():
        session.clear()
        return redirect(url_for("login"))

    @staticmethod
    def ver_respuestas():
        return render_template("ver_respuestas.html")

# 游늷 Ruta de Registro
@app.route("/registro", methods=["GET", "POST"])
def registro():
    if request.method == "POST":
        datos = {
            "email": request.form.get("email"),
            "contrase침a": request.form.get("contrase침a"),
            "nombre": request.form.get("nombre"),
            "apellido": request.form.get("apellido"),
            "calificaciones": [
                request.form.get("matematicas") or 0,
                request.form.get("historia") or 0,
                request.form.get("fisica") or 0,
                request.form.get("quimica") or 0,
                request.form.get("biologia") or 0,
                request.form.get("ingles") or 0,
                request.form.get("geografia") or 0
            ]
        }

        usuario = Usuario(**datos)
        if not usuario.registrar():
            return render_template("registro.html", error="丘멆잺 Este email ya est치 registrado.")

        return redirect(url_for("login"))

    return render_template("registro.html")

# 游늷 Ruta de Login
@app.route("/login", methods=["GET", "POST"])
def login():
    if request.method == "POST":
        email = request.form["email"]
        contrase침a = request.form["contrase침a"]
        usuario = Usuario.autenticar(email, contrase침a)

        if usuario:
            session["usuario_id"], session["nombre"], session["apellido"] = usuario
            return redirect(url_for("encuesta"))

        return render_template("login.html", error="丘멆잺 Email o contrase침a incorrectos")

    return render_template("login.html")

# 游늷 Ruta de Encuesta
@app.route('/encuesta', methods=['GET', 'POST'])
def encuesta():
    if "usuario_id" not in session:
        return redirect(url_for("login"))

    usuario_id = session["usuario_id"]
    conn = db_manager.conectar()
    cursor = conn.cursor()
    cursor.execute("SELECT pregunta, respuesta FROM respuestas WHERE id_usuario = ?", (usuario_id,))
    respuestas_previas = dict(cursor.fetchall())
    conn.close()

    return render_template("encuesta.html", preguntas=Encuesta.preguntas, respuestas_previas=respuestas_previas)

# 游늷 Guardar Respuestas
@app.route('/guardar_respuestas', methods=['POST'])
def guardar_respuestas():
    if "usuario_id" not in session:
        return redirect(url_for("login"))

    usuario_id = session["usuario_id"]
    Encuesta.guardar_respuestas(usuario_id, request.form)
    return redirect(url_for("ver_respuestas"))

# 游늷 Ver Progreso
@app.route("/ver_progreso")
def ver_progreso():
    if "usuario_id" not in session:
        return redirect(url_for("login"))

    usuario_id = session["usuario_id"]
    conn = db_manager.conectar()
    cursor = conn.cursor()
    cursor.execute("SELECT pregunta, respuesta FROM respuestas WHERE id_usuario = ?", (usuario_id,))
    respuestas = cursor.fetchall()
    conn.close()

    return render_template("progreso.html", respuestas=respuestas)

# 游늷 Ruta de Logout
@app.route("/logout")
def logout():
    return SessionService.logout()

@app.route('/ver_respuestas')
def ver_respuestas():
    return SessionService.ver_respuestas()

if __name__ == '__main__':
    app.run(debug=True)
